@RestController
@RequestMapping(path = "/books")
public class BookController {

    @Autowired
    private BookService bookService;

    
    @GetMapping
    private ResponseEntity<List<BookModel>> listarLivros() {
        List<BookModel> list = bookService.findAll();
        if (list.isEmpty()) {
            return ResponseEntity.noContent().build(); 
        }
        return ResponseEntity.ok().body(list);
    }

   
    @PostMapping
    private ResponseEntity<BookModel> criarLivro(@RequestBody @Valid BookModel bookModel) {
       
        if (bookModel == null || bookModel.getId() != null) {
            return ResponseEntity.badRequest().build(); 
        }
        
        try {
            BookModel response = bookService.criarLivro(bookModel);
            URI uri = ServletUriComponentsBuilder.fromCurrentRequest()
                                                 .path("/{id}")
                                                 .buildAndExpand(response.getId())
                                                 .toUri();
            return ResponseEntity.created(uri).body(response);
        } catch (Exception e) {
            return ResponseEntity.status(HttpStatus.INTERNAL_SERVER_ERROR).build(); 
        }
    }

    
    @DeleteMapping("/{id}")
    private ResponseEntity<?> deletarLivro(@PathVariable Long id) {
        Optional<BookModel> book = bookService
